.container {
    border: 5px;
    border-color: black;
    border-style: solid;
    display: flex;
  
    /*flexbox is great for centering an item inside of a container*/
    /*main access goes top to bottom while cross access goes left to right*/
      /*justify content has different options that can be used to style your webpage*/
}

/* flex is a shorthand for grow, shrink and basis. This allows flexbility for additional items and also flexible to grow ans shrink with*/

.container > div {
width: 300px;
}
/*flexbox wont allow you to set the width explicitly if there is no enough width in the container itself to fill that content. It will automatically scale it down by default, 
it wont allow you push any of the items to the next row because flexbox has a flexwrap property which is set to nowrap by default, but can be changed because it has many other features.*/
/*flex grow, shrink and basis. When the flex value is set without being specific, we actually set the value for 3 types of flex.*/
/*flex basis is a way of setting the base width of the element regardless of hoe much extra space is in the container.
flex grow basically decides how much of the extra space should be distributed to the various items in the container
flex shrink is by default set to 1, flex grow is at default set to 0*/
/*the order property value by default is set to 0, so whatver item that has a value above 0, like 1, will be placed at the end. However a value below 0, like -1, will be placed in the beginning.*/

.box {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

.box > div > img {
  width: 200px;
  height: 200px;
}